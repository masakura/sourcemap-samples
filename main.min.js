'use strict';var _createClass=(function(){function defineProperties(target,props){for(var i=0;i < props.length;i++) {var descriptor=props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if("value" in descriptor)descriptor.writable = true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};})();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError("Cannot call a class as a function");}}var Person=(function(){function Person(name){_classCallCheck(this,Person);this.name = name;}_createClass(Person,[{key:'display',value:function display(){alert(this.name);}}]);return Person;})();$(document).on('click','#button1',function(){ // 名前を取得
var name=$('#name-input').val(); // 人のオブジェクトを作って表示する
var person=new Person(name);person.display(); // 人を追加する
$('<li>').addClass('list-group-item').text(person.name).appendTo('#names'); // 入力欄をクリア
$('#name-input').val('');});

//# sourceMappingURL=main.min.js.map